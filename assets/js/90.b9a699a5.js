(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{639:function(a,s,t){"use strict";t.r(s);var r=t(19),n=Object(r.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语句"}},[a._v("#")]),a._v(" 语句")]),a._v(" "),t("p",[a._v("javascript 语句以"),t("code",[a._v(";")]),a._v("分号结尾,表示一行代码,即使你写成多行,但系统只会看分号识别行数.")]),a._v(" "),t("h2",{attrs:{id:"变量声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量声明"}},[a._v("#")]),a._v(" 变量声明")]),a._v(" "),t("ol",[t("li",[t("p",[t("font",{attrs:{color:"#00BFFF"}},[a._v("声明、赋值分解")]),a._v(" "),t("code",[a._v("var a;")]),a._v(" 这个叫变量声明。我们向系统中申请了一个空间，命名叫 a"),t("br"),a._v("\n给 a 赋值 100，写作 "),t("code",[a._v("a = 100;")]),a._v("，这里不是等号是赋值号"),t("br"),a._v(" "),t("code",[a._v("var a；a =100；")]),a._v("可以简化写成 "),t("code",[a._v("var a = 100；")])],1)]),a._v(" "),t("li",[t("p",[t("font",{attrs:{color:"#00BFFF"}},[a._v("单一 var 声明法")]),a._v(" "),t("code",[a._v("var a,b,c,d;")]),a._v("————单一 var 模式"),t("br"),a._v("\n同样可以同时赋值"),t("br"),a._v(" "),t("code",[a._v("var a = 1, b = 2, c = 3, d = 4;")]),t("br"),a._v("\n为可读性通常写法是")],1)])]),a._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  c "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  d "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("赋值可以多次赋值.")]),a._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("123")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\na "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("234")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("后面的值覆盖前面的值,所以是 234;")]),a._v(" "),t("h2",{attrs:{id:"变量命名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量命名"}},[a._v("#")]),a._v(" 变量命名")]),a._v(" "),t("ol",[t("li",[a._v("变量名必须以英文字母、_(下划线)、$ 开头")]),a._v(" "),t("li",[a._v("变量名可以包括英文字母、_、$、数字")]),a._v(" "),t("li",[a._v("不可以用系统的关键字、保留字作为变量名")])]),a._v(" "),t("h2",{attrs:{id:"数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),t("p",[a._v("一共 7 种,如下")]),a._v(" "),t("h3",{attrs:{id:"原始值-primitive-values"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原始值-primitive-values"}},[a._v("#")]),a._v(" 原始值( primitive values )")]),a._v(" "),t("p",[a._v("除 Object 以外的所有类型都是不可变的（值本身无法被改变）。例如，与 C 语言不同，JavaScript 中字符串是不可变的（译注：如，JavaScript 中对字符串的操作一定返回了一个新字符串，原始字符串并没有被改变）。我们称这些类型的值为“原始值”。")]),a._v(" "),t("blockquote",[t("p",[a._v("6 种原始类型:"),t("br"),a._v("\nBoolean"),t("br"),a._v("\nNull"),t("br"),a._v("\nUndefined"),t("br"),a._v("\nNumber"),t("br"),a._v("\nString"),t("br"),a._v("\nSymbol (ECMAScript 6 新定义)")])]),a._v(" "),t("h3",{attrs:{id:"对象-object"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象-object"}},[a._v("#")]),a._v(" 对象 object")]),a._v(" "),t("h3",{attrs:{id:"堆栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#堆栈"}},[a._v("#")]),a._v(" 堆栈")]),a._v(" "),t("p",[a._v("原始值 stack 栈(放值)"),t("br"),a._v("\n引用值 heap 堆(放地址)")]),a._v(" "),t("p",[a._v("例子")]),a._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" arr "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" arr1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\narr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("push")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\ndocument"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\ndocument"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'<br>'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\ndocument"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("arr1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("p",[a._v("改变 arr 的值,arr1 也改变,因为 arr 和 arr1 的地址指向的一个数值(因为堆里只放地址,arr 赋值给 arr1,就是形成 arr1 的地址然后指向 arr 的值).原始值不会这样.")]),a._v(" "),t("h2",{attrs:{id:"注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[a._v("#")]),a._v(" 注释")]),a._v(" "),t("p",[a._v("类似于 CSS，JavaScript 中可以添加注释。")]),a._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n这里的所有内容\n都是注释。\n*/")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("如果注释只有一行，可以更简单地放在两个斜杠之后，就像这样：")]),a._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 这是一条注释。")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"错误"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#错误"}},[a._v("#")]),a._v(" 错误")]),a._v(" "),t("p",[a._v("错误分为两种")]),a._v(" "),t("ol",[t("li",[a._v("低级错误(语法解析错误)该代码块不执行")]),a._v(" "),t("li",[a._v("逻辑错误(标准错误,情有可原) 该代码块在错误处停止运行,不影响其他")])])])}),[],!1,null,null,null);s.default=n.exports}}]);